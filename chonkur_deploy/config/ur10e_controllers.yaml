controller_manager:
  ros__parameters:
    update_rate: 500

    io_and_status_controller:
      type: ur_controllers/GPIOController

    speed_scaling_state_broadcaster:
      type: ur_controllers/SpeedScalingStateBroadcaster

    force_torque_sensor_broadcaster:
      type: force_torque_sensor_broadcaster/ForceTorqueSensorBroadcaster

    joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController

    scaled_joint_trajectory_controller:
      type: ur_controllers/ScaledJointTrajectoryController

    forward_velocity_controller:
      type: velocity_controllers/JointGroupVelocityController

    forward_position_controller:
      type: position_controllers/JointGroupPositionController

    freedrive_mode_controller:
      type: ur_controllers/FreedriveModeController

    # controllers for admittance
    admittance_controller:
      type: admittance_controller/AdmittanceController

    admittance_joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController

    faked_forces_controller: # only for sim
      type: forward_command_controller/MultiInterfaceForwardCommandController


speed_scaling_state_broadcaster:
  ros__parameters:
    state_publish_rate: 100.0
    tf_prefix: ""

io_and_status_controller:
  ros__parameters:
    tf_prefix: ""

force_torque_sensor_broadcaster:
  ros__parameters:
    sensor_name: tcp_fts_sensor
    state_interface_names:
      - force.x
      - force.y
      - force.z
      - torque.x
      - torque.y
      - torque.z
    frame_id: tool0
    topic_name: ft_data


joint_trajectory_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    constraints:
      stopped_velocity_tolerance: 0.2
      goal_time: 0.0
      shoulder_pan_joint: { trajectory: 0.2, goal: 0.1 }
      shoulder_lift_joint: { trajectory: 0.2, goal: 0.1 }
      elbow_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_1_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_2_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_3_joint: { trajectory: 0.2, goal: 0.1 }


scaled_joint_trajectory_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    constraints:
      stopped_velocity_tolerance: 0.2
      goal_time: 0.0
      shoulder_pan_joint: { trajectory: 0.2, goal: 0.1 }
      shoulder_lift_joint: { trajectory: 0.2, goal: 0.1 }
      elbow_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_1_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_2_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_3_joint: { trajectory: 0.2, goal: 0.1 }
    speed_scaling_interface_name: speed_scaling/speed_scaling_factor

forward_velocity_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    interface_name: velocity

forward_position_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint

freedrive_mode_controller:
  ros__parameters:
    tf_prefix: "$(var tf_prefix)"

# admittance version of JTC
admittance_joint_trajectory_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint
    command_interfaces:
      - position
      - velocity
    state_interfaces:
      - position
      - velocity
    command_joints:
      - admittance_controller/shoulder_pan_joint
      - admittance_controller/shoulder_lift_joint
      - admittance_controller/elbow_joint
      - admittance_controller/wrist_1_joint
      - admittance_controller/wrist_2_joint
      - admittance_controller/wrist_3_joint
    state_publish_rate: 100.0
    action_monitor_rate: 20.0
    allow_partial_joints_goal: false
    constraints:
      stopped_velocity_tolerance: 0.2
      goal_time: 0.0
      shoulder_pan_joint: { trajectory: 0.2, goal: 0.1 }
      shoulder_lift_joint: { trajectory: 0.2, goal: 0.1 }
      elbow_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_1_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_2_joint: { trajectory: 0.2, goal: 0.1 }
      wrist_3_joint: { trajectory: 0.2, goal: 0.1 }

# admittance controller
admittance_controller:
  ros__parameters:
    joints:
      - shoulder_pan_joint
      - shoulder_lift_joint
      - elbow_joint
      - wrist_1_joint
      - wrist_2_joint
      - wrist_3_joint

    command_interfaces:
      - position

    state_interfaces:
      - position
      - velocity

    chainable_command_interfaces:
      - position
      - velocity

    kinematics:
      plugin_name: kinematics_interface_kdl/KinematicsInterfaceKDL
      plugin_package: kinematics_interface
      base: base_link # Assumed to be stationary
      tip: grasp_frame
      group_name: chonkur_grasp
      alpha: 0.0005

    # We must separately specify the name of the base link for the kinematics plugin, as was added in
    # https://github.com/ros-controls/kinematics_interface/blob/2f02ebd1ab16828c346c8ccc12e21bf8ef7a29a7/kinematics_interface_kdl/src/kinematics_interface_kdl.cpp#L51
    # This is redundant, but necessary so that the IK solver for the controller only uses the UR links,
    # and not anything the robot is attached to (e.g. a lift or rail or both!)
    # Unfortunately, as we are still on humble we must compile that interface from source.
    base: base_link

    ft_sensor:
      name: tcp_fts_sensor
      frame:
        id: tool0  # Wrench measurements are in this frame
      filter_coefficient: 0.1

    control:
      frame:
        id: grasp_frame # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector

    fixed_world_frame:
      frame:   # Gravity points down (neg. Z) in this frame (Usually: world or base_link)
        id: base_link # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector

    gravity_compensation:
      frame:
        id: tool0

      CoG: # specifies the center of gravity of the end effector
        pos:
          - 0.0 # x
          - 0.0 # y
          - 0.0 # z
        force: 0.0 # mass * 9.81

    admittance:
      selected_axes: # starting default to off
        - false # x
        - false # y
        - false # z
        - false # rx
        - false # ry
        - false # rz

      # Having ".0" at the end is MUST, otherwise there is a loading error
      # F = M*a + D*v + S*(x - x_d)
      mass:
        - 15.0 # x
        - 15.0 # y
        - 15.0 # z
        - 2.5 # rx
        - 2.5 # ry
        - 2.5 # rz

      damping_ratio: # damping can be used instead: zeta = D / (2 * sqrt( M * S ))
        - 3.5 # x
        - 3.5 # y
        - 3.5 # z
        - 1.0 # rx
        - 1.0 # ry
        - 1.0 # rz

      stiffness:
        - 300.0 # x
        - 300.0 # y
        - 300.0 # z
        - 20.0 # rx
        - 20.0 # ry
        - 20.0 # rz

    # general settings
    enable_parameter_update_without_reactivation: true

faked_forces_controller:
  ros__parameters:
    joint: tcp_fts_sensor
    interface_names:
      - force.x
      - force.y
      - force.z
      - torque.x
      - torque.y
      - torque.z
